[{"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\index.tsx":"1","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\App.tsx":"3","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\header\\header.tsx":"4","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\search\\search.tsx":"5","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\search\\Input.tsx":"6","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\courty\\CoutryList.tsx":"7","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\store\\index.tsx":"8","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\courty\\CountryItem.tsx":"9","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\option\\option.tsx":"10","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\pages\\country\\country.tsx":"11","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\List\\countryList.tsx":"12","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\pages\\style\\style.tsx":"13"},{"size":772,"mtime":1612491639519,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1606992286258,"results":"16","hashOfConfig":"15"},{"size":1779,"mtime":1612511331211,"results":"17","hashOfConfig":"15"},{"size":2735,"mtime":1612506452658,"results":"18","hashOfConfig":"15"},{"size":1688,"mtime":1612494718946,"results":"19","hashOfConfig":"15"},{"size":2304,"mtime":1612508845632,"results":"20","hashOfConfig":"15"},{"size":2473,"mtime":1612511225858,"results":"21","hashOfConfig":"15"},{"size":1404,"mtime":1612490989186,"results":"22","hashOfConfig":"15"},{"size":2291,"mtime":1612511076035,"results":"23","hashOfConfig":"15"},{"size":3969,"mtime":1612508447309,"results":"24","hashOfConfig":"15"},{"size":2009,"mtime":1612508957180,"results":"25","hashOfConfig":"15"},{"size":3555,"mtime":1612498852387,"results":"26","hashOfConfig":"15"},{"size":18002,"mtime":1612509750269,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"f2wo5r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\index.tsx",[],["60","61"],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\App.tsx",["62","63"],"/*\n * @Author: your name\n * @Date: 2021-02-03 11:24:11\n * @LastEditTime: 2021-02-05 15:47:36\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\my-app\\src\\App.tsx\n */\nimport React, { useEffect,useState}from 'react';\nimport './App.css';\nimport './css/global.css';\nimport Header from './components/header/header';\nimport Search from './components/search/search';\nimport CountryList from './components/courty/CoutryList';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Country from './pages/country/country';\nimport Style from './pages/style/style';\nimport { useRecoilState } from 'recoil';\nimport { setColor } from './store/index';\nconst App=()=> {\n  const [bgColor, setBgColor] = useRecoilState(setColor);\n  const mainClass = bgColor ? 'dark-theme-bg' : 'light-theme-bg';\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)');\n    setBgColor(mq.matches);\n  }, []);\n  return (\n          <Router>\n              <div className=\"App\">\n              <div className={mainClass}>\n                <Header setDarkModeFuc={setBgColor} dark={bgColor} />\n                  <div style={{paddingTop:'40px',paddingBottom:'40px'}}>\n                            <Switch>\n                              <Route path='/country/:id' component={Country}></Route>\n                              <Route path='/style' component={Style}></Route>\n                              <Route path='/'>\n                                      <Search />\n                                      <CountryList/>\n                                </Route>\n                            </Switch>    \n\n                  </div>\n                </div>\n              </div>\n        </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\header\\header.tsx",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\search\\search.tsx",["64"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-03 17:43:45\r\n * @LastEditTime: 2021-02-05 11:11:58\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\components\\search\\search.tsx\r\n */\r\n\r\nimport React, { useState ,useEffect} from 'react';\r\nimport Input from './Input';\r\nimport styled from 'styled-components';\r\nimport { inputValue } from '../../store/index';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport Options from '../option/option';\r\n\r\nconst SearchWrap = styled.div`\r\n        max-width: 1120px;\r\n        margin: 30px auto;\r\n        .search {\r\n            position: relative;\r\n           display: flex;\r\n           justify-content: space-between;\r\n        }\r\n        @media  screen and  (max-width:1024px) {\r\n            .search {\r\n                flex-direction:column;\r\n                padding: 0 20px;\r\n            }\r\n        }\r\n\r\n`;\r\n\r\n\r\nconst Search = (props: any) => {\r\n    const [value, setValue] = useState('');\r\n    useEffect(() => {\r\n        setValue('');\r\n        setInputValue('');\r\n    },[])\r\n    const setInputValue = useSetRecoilState(inputValue);\r\n    const changeHandler = (e:any) => {\r\n        setValue(e.target.value);\r\n        setInputValue(e.target.value);\r\n    };\r\n    const clearinput = () => {\r\n        setValue('');\r\n        setInputValue('');\r\n    }\r\n    return (\r\n        <SearchWrap>\r\n            <div className='search'>\r\n                \r\n                <Input placeholder='搜索你想要的国家或地区~~' onChange={changeHandler} value={value} clearinputhanlder={ clearinput}/>\r\n                <Options/>\r\n            </div>\r\n        </SearchWrap>\r\n    )\r\n};\r\n\r\n\r\nexport default Search;","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\search\\Input.tsx",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\courty\\CoutryList.tsx",["65","66"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-04 10:55:01\r\n * @LastEditTime: 2021-02-05 15:47:05\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\components\\courty\\CoutryList.tsx\r\n */\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {  useRecoilValue,useRecoilState } from 'recoil';\r\nimport {countryList,filterCountry} from '../../store/index'\r\nimport  CountryItem  from './CountryItem';\r\n\r\n\r\n\r\nconst Wrap = styled.div`\r\n    .countryList {\r\n        display: grid;\r\n        grid-template-columns: repeat(4, 24%);\r\n        grid-column-gap: 20px;\r\n        grid-row-gap: 20px;\r\n        max-width: 1120px;\r\n        margin: auto;\r\n    }\r\n    @media screen and (max-width:1024px) {\r\n        .countryList {\r\n            padding: 0 20px;\r\n            grid-template-columns: repeat(2, 48%);\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst CountryList = () => {\r\n    const [countrylist, setCountrylist] = useRecoilState(countryList);\r\n    const filterCountryData = useRecoilValue(filterCountry);\r\n  \r\n    useEffect(() => {\r\n        setCountrylist([]);\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((list) => {\r\n                setCountrylist((old): any => [\r\n                    ...old,\r\n                    ...list\r\n                ])\r\n            })\r\n            .catch(() => {\r\n                console.log('hubo un error, que dolor que dolo que pena')\r\n            });\r\n    },[]);\r\n    return (\r\n        <Wrap>\r\n                <div className='countryList'>\r\n                    {        \r\n                        filterCountryData.map(({ name, flag, population, capital, region, nativeName, cioc, alpha2Code }) => (\r\n                            <CountryItem\r\n\r\n                                key={name}\r\n                                name={name}\r\n                                flag={flag}\r\n                                population={population}\r\n                                capital={capital}\r\n                                nativeName={nativeName}\r\n                                region={region}\r\n                                cioc={cioc}\r\n                                alpha2Code={alpha2Code}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n        </Wrap>\r\n    )\r\n};\r\nexport default CountryList;","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\store\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\courty\\CountryItem.tsx",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\option\\option.tsx",[],"C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\pages\\country\\country.tsx",["67"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-04 17:01:09\r\n * @LastEditTime: 2021-02-05 15:08:52\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\pages\\country\\country.tsx\r\n */\r\nimport React, { useEffect,useState } from 'react';\r\nimport {useParams ,useHistory} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport List from '../../components/List/countryList'\r\n\r\n\r\n\r\nconst Wrap = styled.div`\r\n        max-width: 1120px;\r\n        margin: auto;\r\n        padding: 1rem;\r\n        .wrap {\r\n            .back_wrap {\r\n                cursor: pointer;\r\n            }\r\n                .back {\r\n                    border:none;\r\n                    outline: none;\r\n                    border-radius: 5px;\r\n                    padding: 10px 30px;\r\n                    box-shadow: 0 0 4px #9e9e9e;\r\n                    cursor: pointer;\r\n                    background: #fff;\r\n                    display: flex;\r\n                    span {\r\n                            align-self:center;\r\n                    }\r\n                }\r\n        }\r\n\r\n`;\r\n\r\n\r\nconst Country = (props: any) => {\r\n    const [country, setCountry] = useState('');\r\n    let { id } = useParams() as any;\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/alpha/${id.toLowerCase()}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCountry(data)\r\n        })\r\n     \r\n    }, []);\r\n    return (\r\n        <Wrap>\r\n            <div className='wrap'>\r\n                <div className=\"back_wrap\">\r\n                    <button className='back' onClick={() => (history.push('/'))}>\r\n                        <span className=\"iconfont icondiqiu\" style={{ marginRight: '10px' }}></span>\r\n                        <span>Back</span>\r\n                    </button>\r\n                </div>\r\n                <List {...country}/>\r\n            </div>\r\n        </Wrap>\r\n    )\r\n};\r\nexport default Country;","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\components\\List\\countryList.tsx",["68"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-04 18:19:20\r\n * @LastEditTime: 2021-02-05 12:20:52\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\components\\List\\countryList.tsx\r\n */\r\nimport React from 'react';\r\nimport  styled  from 'styled-components';\r\nconst CountrySelectedStyled = styled.div`\r\n  margin-top: 1em;\r\n  padding-bottom: 3em;\r\n  h2 {\r\n      font-size: 24px;\r\n      font-weight: 800;\r\n      line-height: 50px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 1em;\r\n    .type {\r\n            p {\r\n                 padding:10px 0;\r\n             }\r\n            strong {\r\n                font-size:15px;\r\n                font-weight:900;\r\n                \r\n            }\r\n    }\r\n  }\r\n  .border {\r\n                 font-size:15px;\r\n                font-weight:900;\r\n                margin-bottom: 20px;\r\n                margin-top: 10px;\r\n  }\r\n  .border-item {\r\n    padding: .5em 2em;\r\n    border-radius: 5px;\r\n    margin-right: 15px;\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    display: inline-flex;\r\n    margin-bottom: 15px;\r\n    background: var(--white);\r\n    cursor: pointer;\r\n  }\r\n  .languages {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: ',';\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 3.5em;\r\n    }\r\n  };\r\n  `;\r\n\r\n\r\n\r\nconst List = (props: any) => {\r\n    let { flag,\r\n        name,\r\n        nativeName,\r\n        population,\r\n        region,\r\n        subregion,\r\n        capital,\r\n        topLevelDomain,\r\n        currencies = [],\r\n        languages = [],\r\n        borders = [],\r\n        alpha2Code } = props;\r\n    return (\r\n        <CountrySelectedStyled>\r\n   \r\n            <img src={flag} alt=\"loading\" />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <div className=\"grid\">\r\n                            <div className='type'>\r\n                                <p><strong>Native Name:</strong> {nativeName}</p>\r\n                                <p><strong>Population:</strong> {population}</p>\r\n                                <p><strong>Region:</strong> {region}</p>\r\n                                <p><strong>Sub Region:</strong> {subregion}</p>\r\n                                <p><strong>Capital:</strong> {capital}</p>\r\n                            </div>\r\n                            <div className='type'>\r\n                                <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n                                <p><strong>Currencies:</strong> {currencies.map((item:any):object => (<span key={item.name}>{item.name}</span>))}</p>\r\n                                <p className=\"languages\"><strong>Languages:</strong> {languages.map((item:any) => (<span key={item.name}>{item.name}</span>))}</p>\r\n                            </div>\r\n                            </div>\r\n                            <p className=\"border\"><strong>Border Countries:</strong></p>\r\n                            {borders.map((item:any) => (<span className=\"border-item\" key={item}>{item}</span>))}\r\n                </div>\r\n        </CountrySelectedStyled>\r\n    )\r\n};\r\n\r\nexport default List;","C:\\Users\\Administrator\\Desktop\\senbo\\my-app\\src\\pages\\style\\style.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":27,"nodeType":"75","messageId":"76","endLine":9,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":30,"column":6,"nodeType":"79","endLine":30,"endColumn":8,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":40,"column":7,"nodeType":"79","endLine":40,"endColumn":9,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"83","line":37,"column":12,"nodeType":"75","messageId":"76","endLine":37,"endColumn":23},{"ruleId":"77","severity":1,"message":"84","line":55,"column":7,"nodeType":"79","endLine":55,"endColumn":9,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"86","line":53,"column":8,"nodeType":"79","endLine":53,"endColumn":10,"suggestions":"87"},{"ruleId":"73","severity":1,"message":"88","line":96,"column":9,"nodeType":"75","messageId":"76","endLine":96,"endColumn":19},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setBgColor'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'setInputValue'. Either include it or remove the dependency array.",["92"],"'countrylist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCountrylist'. Either include it or remove the dependency array.",["93"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["94"],"'alpha2Code' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [setBgColor]",{"range":"103","text":"104"},"Update the dependencies array to be: [setInputValue]",{"range":"105","text":"106"},"Update the dependencies array to be: [setCountrylist]",{"range":"107","text":"108"},"Update the dependencies array to be: [id]",{"range":"109","text":"110"},[974,976],"[setBgColor]",[1065,1067],"[setInputValue]",[1575,1577],"[setCountrylist]",[1500,1502],"[id]"]